node('master') {
  stage('Starting pipeline') {
    mail bcc: '', body: "Build #${env.BUILD_NUMBER} has started", cc: '', from: 'DoNotReply', replyTo: 'donotreply@madeupjenkinsserver.net', subject: "${env.BUILD_TAG}", to: 'thomas.vu.it@gmail.com'
  }

  stage('Pull from SCM') {
    git 'https://github.com/typ-ex/ansible-for-devops-in-aws'
  }

  dir('chapter 9/ELK') {
    stage('Debug incoming code') {
      try {
        sh "yamllint ."
        sh "ansible-playbook main.yml --syntax-check"
        sh "ansible-lint main.yml"
      } catch(Exception exp) {
        mail bcc: '', body: "Build #${env.BUILD_NUMBER} has failed \n println exp.getcause()", cc: '', from: 'DoNotReply', replyTo:'donotreply@madeupjenkinsserver.net', subject: "${env.BUILD_TAG}", to: 'thomas.vu.it@gmail.com'
      }
      }
    stage('Build') {
      sh "ansible-playbook provision.yml"
    }

    stage('Ensure dependencies are installed') {
      sh "ansible-galaxy install -r requirements.yml"
    }

    stage('Provision ELK stack') {
      sh "ansible-playbook elk/main.yml"
    }

    stage('Provision web stack') {
      sh "ansible-playbook web/main.yml"
    }
  }
}